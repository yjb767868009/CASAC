from time import time

from flask import *
from flask_cors import CORS

from model.Server.network_server import Server

app = Flask(__name__)
CORS(app, supports_credentials=True)
print("Building Server")
server = Server()
print("Building Finish")


@app.after_request
def af_request(resp):
    """
    #请求钩子，在所有的请求发生后执行，加入headers。
    :param resp:
    :return:
    """
    resp = make_response(resp)
    resp.headers['Access-Control-Allow-Origin'] = '*'
    resp.headers['Access-Control-Allow-Methods'] = 'GET,POST'
    resp.headers['Access-Control-Allow-Headers'] = 'x-requested-with,content-type'
    return resp


@app.route('/', methods=['POST'])
def upload():
    output = None
    try:
        x = request.json["data"]
        output = server.forward(x)
        """
        t_pose_output = [0.0, 1.05086136, -0.05000019, 0.0, 0.101513706, 0.9948341, 0.0, 0.9948341, -0.101513706, 0.0292898063,
                  0.00141732581, -0.14595969, 0.0, 1.16418707, -0.061961174, 0.0, -0.09219824, 0.995740652, 0.0,
                  0.995740652, 0.09219824, 0.0304671638, -0.00132814783, -0.146386877, 0.0, 1.25770724, -0.0525808334,
                  0.0, -1.4901163e-08, 1.0, 0.0, 1.0, 1.4901163e-08, 0.03242092, -0.0028144673, -0.144260854, 0.0,
                  1.34260523, -0.0525808334, 0.0, -1.4901163e-08, 1.0, 0.0, 1.0, 1.4901163e-08, 0.0338732265,
                  -0.00383039122, -0.142642081, 0.0, 1.42750323, -0.0525808334, 0.0, -1.4901163e-08, 1.0, 0.0, 1.0,
                  1.4901163e-08, 0.036372114, -0.00465132343, -0.13995716, 0.0, 1.551552, -0.0525808334, 0.0,
                  -0.219251454, 0.9756684, 0.0, 0.9756684, 0.219251454, 0.0404836647, -0.006756196, -0.134003133, 0.0,
                  1.63821626, -0.0321602821, 0.0, -0.229039356, 0.973417163, 0.0, 0.973417163, 0.229039356,
                  0.0437564552, -0.008434796, -0.1280425, -0.031967748, 1.49717045, -0.0525808334, 0.0, -1.4901163e-08,
                  1.0, 0.0, 1.0, 1.4901163e-08, 0.0345038474, -0.00511670345, -0.134277776, -0.191526711, 1.49717045,
                  -0.0525808334, -6.728027e-09, -1.16251835e-08, 1.0, -0.79335326, 0.608761549, 1.73926207e-09,
                  0.0203933474, 0.00384394964, -0.120453425, -0.342453778, 1.30047858, -0.0525808334, 0.349171281,
                  0.45504874, 0.819152057, -0.79335326, 0.6087615, 4.47034836e-08, 0.0125196921, 0.0126300193,
                  -0.09627679, -0.4465887, 1.16476727, 0.06750202, 0.328544021, 0.428166628, 0.8418624, -0.79335326,
                  0.6087616, 4.47034836e-08, -0.000434993563, 0.0155447228, -0.09171929, 0.031967748, 1.49717045,
                  -0.0525808334, 0.0, -1.4901163e-08, 1.0, 0.0, 1.0, 1.4901163e-08, 0.04278155, -0.00563054,
                  -0.139083609, 0.191526711, 1.49717045, -0.0525808334, 6.728027e-09, -1.16251835e-08, 1.0, 0.79335326,
                  0.608761549, 1.73926207e-09, 0.0568097159, -0.00492493, -0.151200831, 0.342453778, 1.30047858,
                  -0.0525808334, -0.349171281, 0.45504874, 0.819152057, 0.79335326, 0.6087615, 4.47034836e-08,
                  0.0617866069, -0.008830036, -0.141221032, 0.4465887, 1.16476727, 0.06750202, -0.328544021,
                  0.428166628, 0.8418624, 0.79335326, 0.6087616, 4.47034836e-08, 0.07677711, -0.002313999, -0.121860713,
                  -0.09568995, 1.05280864, -0.05000019, 4.656613e-10, -0.04802447, 0.9988462, 0.10452836, 0.9933744,
                  0.04776139, 0.0212940332, 0.0005998774, -0.138010085, -0.154904529, 0.4900617, -0.07690287,
                  -0.00347617222, -0.08103336, 0.996705353, 0.104470566, 0.9912278, 0.08095238, 0.0299358368,
                  0.00100172684, -0.122363605, -0.19811967, 0.0800215, -0.110176563, 0.005019611, -0.000265724753,
                  0.999987364, 0.104407787, 0.994534552, -0.000259817083, -0.016481217, 0.0215320252, -0.162459046,
                  -0.20502761, 0.005723238, 0.06656599, 0.005019611, -0.000265724753, 0.999987364, 0.104407787,
                  0.994534552, -0.000259817083, -0.0195034184, 0.0005091497, -0.11985945, 0.09568995, 1.05280864,
                  -0.05000019, -4.656613e-10, -0.04802447, 0.9988462, -0.10452836, 0.9933744, 0.04776139, 0.03734093,
                  0.00221056654, -0.153949782, 0.154904529, 0.4900617, -0.07690287, 0.00347617222, -0.08103336,
                  0.996705353, -0.104470566, 0.9912278, 0.08095238, 0.06043513, 0.00490744272, -0.1534689, 0.19811967,
                  0.0800215, -0.110176563, -0.005019611, -0.000265724753, 0.999987364, -0.104407787, 0.994534552,
                  -0.000259817083, 0.0589990653, 0.00304665882, -0.18538706, 0.20502761, 0.005723238, 0.06656599,
                  -0.005019611, -0.000265724753, 0.999987364, -0.104407787, 0.994534552, -0.000259817083, 0.09744788,
                  -0.035241086, -0.151873827, 0.0, 1.05086136, -0.05000019, 0.0, 1.16418707, -0.061961174, 0.0,
                  1.25770724, -0.0525808334, 0.0, 1.34260523, -0.0525808334, 0.0, 1.42750323, -0.0525808334, 0.0,
                  1.551552, -0.0525808334, 0.0, 1.63821626, -0.0321602821, -0.031967748, 1.49717045, -0.0525808334,
                  -0.191526711, 1.49717045, -0.0525808334, -0.342453778, 1.30047858, -0.0525808334, -0.4465887,
                  1.16476727, 0.06750202, 0.031967748, 1.49717045, -0.0525808334, 0.191526711, 1.49717045,
                  -0.0525808334, 0.342453778, 1.30047858, -0.0525808334, 0.4465887, 1.16476727, 0.06750202, -0.09568995,
                  1.05280864, -0.05000019, -0.154904529, 0.4900617, -0.07690287, -0.19811967, 0.0800215, -0.110176563,
                  -0.20502761, 0.005723238, 0.06656599, 0.09568995, 1.05280864, -0.05000019, 0.154904529, 0.4900617,
                  -0.07690287, 0.19811967, 0.0800215, -0.110176563, 0.20502761, 0.005723238, 0.06656599, 0.0, 0.0, 0.0,
                  1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                  0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                  0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0,
                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
                  0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
                  0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
                  1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                  0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0,
                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
                  1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                  0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0,
                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
                  1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                  0.0, 1.0, 1.0, 0.03333, 0.2, 0.36667, 0.53333, 0.7, 0.86667, 1.03333]
        """
    except Exception as e:
        print(e)
        return jsonify({'message': 'fail',
                        'output': e})
    return jsonify({'message': 'success',
                    'output': output})


@app.route('/test', methods=['POST'])
def test():
    data = None
    try:
        request_body = request.json
        data = request_body["data"]
    except Exception as e:
        print(e)
    return jsonify({'message': 'success',
                    'output': data})

if __name__ == '__main__':
    app.run('0.0.0.0', port=8081)
